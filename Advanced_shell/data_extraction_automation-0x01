#!/bin/bash

# Pok√©mon data extraction script
# Extracts name, height, weight, and type from data.json
# Uses jq, awk, and sed for text manipulation

# Check if data.json exists
if [ ! -f "data.json" ]; then
    echo "Error: data.json not found. Please run the API automation script first."
    exit 1
fi

# Extract data using jq and format with awk and sed
# Get name, height, weight, and type from the JSON
pokemon_data=$(jq -r '.name, .height, .weight, .types[0].type.name' data.json)

# Use awk to process the data and extract variables
name=$(echo "$pokemon_data" | awk 'NR==1')
height=$(echo "$pokemon_data" | awk 'NR==2')
weight=$(echo "$pokemon_data" | awk 'NR==3')
type=$(echo "$pokemon_data" | awk 'NR==4')

# Convert height from decimeters to meters (divide by 10)
formatted_height=$(echo "$height" | awk '{printf "%.1f", $1 / 10}')

# Convert weight from hectograms to kilograms (divide by 10)
formatted_weight=$(echo "$weight" | awk '{printf "%.0f", $1 / 10}')

# Capitalize first letter of type using awk
type=$(echo "$type" | awk '{print toupper(substr($0,1,1)) substr($0,2)}')

# Capitalize first letter of name using awk
name=$(echo "$name" | awk '{print toupper(substr($0,1,1)) substr($0,2)}')

# Output the exact required format
echo "$name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall."
